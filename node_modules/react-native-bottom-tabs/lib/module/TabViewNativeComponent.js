"use strict";

import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';

//@ts-ignore

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
const {
  ConditionallyIgnoredEventHandlers
} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');
let nativeComponentName = 'RNCTabView';
export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'RNCTabView',
  directEventTypes: {
    topPageSelected: {
      registrationName: 'onPageSelected'
    },
    topTabLongPress: {
      registrationName: 'onTabLongPress'
    },
    topTabBarMeasured: {
      registrationName: 'onTabBarMeasured'
    },
    topNativeLayout: {
      registrationName: 'onNativeLayout'
    }
  },
  validAttributes: {
    items: true,
    selectedPage: true,
    icons: true,
    tabBarHidden: true,
    labeled: true,
    sidebarAdaptable: true,
    scrollEdgeAppearance: true,
    barTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    translucent: true,
    rippleColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    activeTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    inactiveTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    disablePageAnimations: true,
    activeIndicatorColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    hapticFeedbackEnabled: true,
    minimizeBehavior: true,
    fontFamily: true,
    fontWeight: true,
    fontSize: true,
    ...ConditionallyIgnoredEventHandlers({
      onPageSelected: true,
      onTabLongPress: true,
      onTabBarMeasured: true,
      onNativeLayout: true
    })
  }
};
export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
//# sourceMappingURL=TabViewNativeComponent.js.map