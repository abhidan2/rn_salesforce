"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SFSymbol = exports.SFSymbolScale = exports.SFSymbolWeight = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_native_1 = require("react-native");
var SFSymbolWeight;
(function (SFSymbolWeight) {
    SFSymbolWeight["ULTRALIGHT"] = "ultralight";
    SFSymbolWeight["LIGHT"] = "light";
    SFSymbolWeight["THIN"] = "thin";
    SFSymbolWeight["REGULAR"] = "regular";
    SFSymbolWeight["MEDIUM"] = "medium";
    SFSymbolWeight["SEMIBOLD"] = "semibold";
    SFSymbolWeight["BOLD"] = "bold";
    SFSymbolWeight["HEAVY"] = "heavy";
})(SFSymbolWeight = exports.SFSymbolWeight || (exports.SFSymbolWeight = {}));
var SFSymbolScale;
(function (SFSymbolScale) {
    SFSymbolScale["SMALL"] = "small";
    SFSymbolScale["MEDIUM"] = "medium";
    SFSymbolScale["LARGE"] = "large";
})(SFSymbolScale = exports.SFSymbolScale || (exports.SFSymbolScale = {}));
const RNSFSymbol = react_native_1.requireNativeComponent("RNSfsymbols");
class SFSymbol extends react_1.PureComponent {
    render() {
        const { name, color, resizeMode, ...props } = this.props;
        const defaultResizeMode = !resizeMode && props.size ? "center" : "scale-aspect-fit";
        return (jsx_runtime_1.jsx(RNSFSymbol, Object.assign({}, props, { resizeMode: resizeMode ?? defaultResizeMode, systemName: name, iconColor: react_native_1.processColor(color) }), void 0));
    }
}
exports.SFSymbol = SFSymbol;
//# sourceMappingURL=index.js.map